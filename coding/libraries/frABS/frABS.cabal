name:             FrABS
version:          0.1
Build-Type:       Simple
cabal-version:    >= 1.2
author:           Jonathan Thaler
maintainer:       Jonathan Thaler (thaler.jonathan@gmail.com)
category:         Agent-Based Simulation, Reactivity, FRP
synopsis:         Library for programming agent-based simulation in a pure functional, reactive style

description:      Domain-specific language embedded in Haskell for programming
                  agent-based simulation (mixed discrete-time and continuous-time) systems. FrABS is based on
                  Yampa, the concepts of Functional Reactive Programming (FRP) 

build-type:        Simple

library
  hs-source-dirs:  src
  ghc-options :    -O3 -Wall -fwarn-tabs -fno-warn-name-shadowing -threaded
  build-depends:   base, Yampa, gloss, random, containers, array, MonadRandom, split, fgl, transformers, parallel, stm
  exposed-modules:
    FrABS.FrABS
    FrABS.Agent.Agent
    FrABS.Agent.Utils
    FrABS.Agent.Random
    FrABS.Agent.Monad
    FrABS.Agent.Reactive
    FrABS.Env.Environment
    FrABS.Env.Utils
    FrABS.Simulation.Simulation
    FrABS.Simulation.Utils
    FrABS.Simulation.ParIteration      
    FrABS.Simulation.SeqIteration 
    FrABS.Simulation.Internal
    FrABS.Rendering.Agents2DDiscrete
    FrABS.Rendering.GlossSimulator

-- unclear why ParIteration, SeqIteration & FrABS.Simulation.Utils need to be exposed. if not it leads to undefined symbol 