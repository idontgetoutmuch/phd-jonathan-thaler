{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"if",
				"ifThenElse"
			],
			[
				"ifT",
				"ifThenElseM"
			],
			[
				"wrapCon",
				"wrapCont2D"
			],
			[
				"update",
				"updateDomainState"
			],
			[
				"initInput",
				"initInputsWithEnv"
			],
			[
				"Offerin",
				"OfferingData \tDoubleAuction.DAModel"
			],
			[
				"onMessageM",
				"onMessageMState ∷ AgentIn s m ec l → (AgentMessage m → State acc ()) → State acc ()\tFrABS.Agent.Monad"
			],
			[
				"onMe",
				"onMessageM ∷ Monad mon ⇒ AgentIn s m ec l → (acc → AgentMessage m → mon acc) → acc → mon acc\tFrABS.Agent.Monad"
			],
			[
				"error",
				"error ∷ HasCallStack ⇒ [Char] → a\tPrelude"
			],
			[
				"Age",
				"AgentMessage m\tFrABS.Agent.Agent"
			],
			[
				"Agent",
				"AgentMessage m\tFrABS.Agent.Agent"
			],
			[
				"Agen",
				"AgentId \tFrABS.Agent.Agent"
			],
			[
				"agentOu",
				"agentOutFromIn ∷ AgentIn s m ec l → AgentOut s m ec l\tFrABS.Agent.Agent"
			],
			[
				"ifthe",
				"ifThenElseM"
			],
			[
				"ifThen",
				"ifThenElse"
			],
			[
				"agentout",
				"agentOutFromIn ∷ AgentIn s m ec l → AgentOut s m ec l\tFrABS.Agent.Agent"
			],
			[
				"envion",
				"environmentPositionM"
			],
			[
				"igni",
				"ignitionEvent"
			],
			[
				"init",
				"initIgnite"
			],
			[
				"extractParamFrom",
				"extractParamFromVector ∷ Value → Int → Maybe Value\tRpc.Utils"
			],
			[
				"exc",
				"extractParam ∷ Value → Int → Text → Maybe Value\tRpc.Utils"
			],
			[
				"encod",
				"encodeQuantity ∷ Int → String\tRpc.Utils"
			],
			[
				"JsonRpcRe",
				"JsonRpcResponse \tEthJsonRpc.Methods"
			],
			[
				"server",
				"serverLoop"
			],
			[
				"et",
				"ethJsonRpcPort"
			],
			[
				"SockA",
				"SockAddrInet"
			],
			[
				"receivi",
				"receivingIdx"
			],
			[
				"rece",
				"receivingIn"
			],
			[
				"may",
				"mayIdx"
			],
			[
				"handleCon",
				"handleConversationAux"
			],
			[
				"mayb",
				"maybeFunc1"
			],
			[
				"SugarScapeC",
				"SugarScapeEnvCell \tSugarScape.SugarScapeModel"
			],
			[
				"sugEnv",
				"sugEnvSugarLevel ∷ SugarScapeEnvCell → Double\tSugarScape.SugarScapeModel"
			],
			[
				"sugAgSug",
				"sugAgSugarLevel ∷ SugarScapeAgentState → Double\tSugarScape.SugarScapeModel"
			],
			[
				"Cultur",
				"SugarScapeCulturalTag \tSugarScape.SugarScapeModel"
			]
		]
	},
	"buffers":
	[
		{
			"file": "examples/Main.hs",
			"settings":
			{
				"buffer_size": 1532,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/FRP/FrABS/Rendering/GlossSimulator.hs",
			"settings":
			{
				"buffer_size": 6488,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/FRP/FrABS/Agent/Agent.hs",
			"settings":
			{
				"buffer_size": 10637,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 124.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"stack",
				"SublimeHaskell: Stack Exec"
			],
			[
				"haskell",
				"SublimeHaskell: Lint"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			]
		],
		"width": 461.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/jonathan/phd/coding/libraries/frABS",
		"/home/jonathan/phd/coding/libraries/frABS/examples",
		"/home/jonathan/phd/coding/libraries/frABS/src",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Agent",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Simulation"
	],
	"file_history":
	[
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Agent/Monad.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/FrSIRSSpatial/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/FrSIRSSpatial/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Rendering/GlossSimulator.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Environment/Discrete.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Environment/Spatial.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Environment/Network.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Environment/Continuous.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Rendering/Discrete2d.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Simulation/Simulation.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Rendering/GlossDebugger.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/NewAgents/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/NewAgents/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/DoubleAuction/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/DoubleAuction/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Main.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/Exporter.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Conversation/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/FrSIRSNetwork/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/FrSIRSNetwork/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/PolicyEffects/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/PolicyEffects/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/PrisonersDilemma/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/RecursiveABS/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Agent/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SysDynSIR/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SysDynSIR/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Zombies/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Zombies/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Simulation/Replication.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Agent/Reactive.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/DoubleAuction/Auctioneer.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/NewAgents/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/NewAgents/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/DoubleAuction/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/NewAgent/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/NewAgent/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/NewAgent/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Zombies/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Segregation/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Zombies/Renderer.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Environment/Utils.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/AgentZero/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/AgentZero/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/AgentZero/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/HeroesCowards/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/HeroesCowards/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Zombies/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Wildfire/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Rendering/Continuous2d.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Utils.hs",
		"/home/jonathan/phd/coding/libraries/frABS/FrABS.cabal",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Agent/Random.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/AgentZero/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/FrSIRSSpatial/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/Common.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/FrSIRSNetwork/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/FrSIRSSpatial/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/PrisonersDilemma/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/PrisonersDilemma/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SIRS/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Segregation/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Segregation/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Wildfire/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Zombies/Environment.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/Tests/Common.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/Tests/Test.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/Renderer.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/tests/Environment/Discrete.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/Environment.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Rendering/Network.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Segregation/Stats.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/PolicyEffects/Renderer.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Wildfire/Renderer.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/tests/Test.hs",
		"/home/jonathan/.config/sublime-text-3/Packages/SublimeHaskell/Settings/SublimeHaskell.sublime-settings",
		"/home/jonathan/.config/sublime-text-3/Packages/User/SublimeHaskell.sublime-settings",
		"/home/jonathan/.config/sublime-text-3/Packages/User/SublimeREPL.sublime-settings",
		"/home/jonathan/phd/coding/libraries/frABS/src/tests/Discrete2d.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/frABSExamples.cabal",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/Tests/Main.hs",
		"/home/jonathan/phd/coding/libraries/frABS/Yampa/Yampa.cabal",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/AgentCommon.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SIRS/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/sugarscape_carryingcapacity.m",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Environment/Definitions.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/        Actual type",
		"/home/jonathan/phd/coding/libraries/frABS/examples/    • Found hole",
		"/home/jonathan/phd/coding/libraries/frABS/examples/    Not in scope",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/AgentMonadic.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SugarScape/AgentPure.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Wildfire/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SysDynSIR/StockFlow.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Simulation/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/AgentZero/Environment.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/AgentZero/Renderer.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/frSIRSNetworkDynamics_1024agents_1000steps_0.1dt.m",
		"/home/jonathan/phd/coding/libraries/frABS/examples/FrSIRSNetwork/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/PolicyEffects/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/FrSIRSNetwork/Renderer.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/HeroesCowards/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Agent/Utils.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/PolicyEffects/Agent.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Segregation/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/FrSIRSSpatial/Renderer.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/HeroesCowards/Renderer.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/PrisonersDilemma/Renderer.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SIRS/Renderer.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Segregation/Renderer.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/HeroesCowards/Run.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Rendering/Discrete2D.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SIRS/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/PrisonersDilemma/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SIRS/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/SysDynSIR/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Wildfire/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/DoubleAuction/Trader.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Conversation/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/RecursiveABS/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/RecursiveABS/Model.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Simulation/Internal.hs",
		"/home/jonathan/phd/coding/libraries/frABS/examples/Conversation/Init.hs",
		"/home/jonathan/phd/coding/libraries/frABS/src/FRP/FrABS/Simulation/SeqIteration.hs"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"C:\\Users\\Jonathan Thaler\\phd\\coding\\libraries\\frABS\\src,*.hs"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"SugarScapeAgentObservable",
			"AGentOut",
			"(AgentId, s)",
			"updateDomainState",
			"agentPureIgnoreEnv",
			"DAEnvironment",
			"DoubleAuctionMsg",
			"DAAgentState",
			"coordPatch",
			"Continuous2DCoord",
			"Continuous2DDimension",
			"cellAt",
			"agentRandomPicks",
			"collectMessagesFor",
			"event",
			"replaceEnvOfAins",
			"runEnv",
			"replaceEnvOfAins",
			"newAgentIn ",
			"newAgentIn",
			"passEnvForward",
			"collectMessagesFor",
			"newAgentIn",
			"distributeMessages",
			"distributeActions",
			"sendMessageToM",
			"sendMessageTo",
			"hasMessage",
			"transitionOnMessage",
			"messageEventSource",
			"transitionOnMessage",
			"sendMessage",
			"(discrete",
			"(Discrete2dCoord, c)",
			"cellAt",
			"neighbourids",
			"neighbourIdsM",
			"agentLookoutM",
			"neighboursInNeumannDistance",
			"neighbours",
			"randomCoord",
			"agentZeroAgentBehaviourFuncM",
			"wrapDisc2d",
			"defaultEnvRendererDisc2d",
			"updateCellAt",
			" \n",
			"diseasesInitial",
			"calculateHammingDistances",
			"_enableDiseases_",
			"isdis",
			"Diseased",
			"agentNonCombatMoveM",
			"agentMoveM",
			"agentKilledInCombatM",
			"agentTradingM",
			"agentAgeingM",
			"agentKilledInCombatM",
			"agentCultureContactM",
			"agentSexM",
			"InheritSugar",
			"_enableInheritance_",
			"InheritSugar",
			"passWealthOnM",
			"crossover",
			"changeCellAt",
			"handleMatingConversationM",
			"satisfiesWealthForChildBearingM",
			"satisfiesWealthForChildBearing",
			"isFertile",
			"isFertileM",
			"agentSexM",
			"agentWelfareChange",
			"bestMeasureSugarLevel",
			"poluteCell",
			"neighbourIn",
			"neighboursIn",
			"Discrete2dNeighbourhood",
			"envDisc2dNeighbourhood",
			"neighbourInDistance",
			"SugarScapeEnvCell",
			"selectBestCells",
			"SugarScapeEnvironmentMonadicBehaviour",
			"winterSeasonSugarGrowbackRatio",
			"summerSeasonSugarGrowback",
			"updateCells",
			"_enablePassWealthOnDeath_",
			"_enableSugarPassedOnDeath_",
			"_enablePassWealthOnDeath_",
			"seasons",
			"passWealthOnM",
			"diseasedMetabolismIncrease",
			"metabolismAmount",
			"runSugarScapeStepsAndExport",
			"birthNewAgentM",
			"agentDiesM",
			"cellOccupier",
			"neighbourInDistance",
			"agentMetabolismM",
			"polutionEnabled",
			"metabolismAmount",
			"agentMetabolismM",
			"inheritSugarM",
			"agentDiesM",
			"unoccupyPositionM",
			"ageRange",
			"sugAgMaxAge",
			"agentAgeingM",
			"unoccupyPositionM",
			"sugarScapeAgentBehaviour",
			"sugarScapeAgentBehaviourM",
			"sugarScapeAgentConversation",
			"unoccupyPosition",
			"poluteCell",
			"agentLookout",
			"EnvCoord",
			"poluteCell",
			"polute",
			"cellAt",
			"EnvLimits",
			"EnvCoord",
			"e2",
			"agentDiseaseProcessesM",
			"agentCreditM",
			"agentTradingM",
			"agentSexM",
			"agentCultureContactM",
			"inheritSugarM",
			"agentMetabolismM"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"AgentObservable s",
			"NewAgentEnvironment",
			"NewAgentMsg",
			"NewAgentState",
			"originPatch",
			"Continuous2dCoord",
			"Continuous2dDimension",
			"Discrete2dCell c",
			"Discrete2dCoord",
			"Discrete2dDimension",
			"Discrete2dCoord",
			"EnvCellColorerDisc2d",
			"EnvRendererDisc2d",
			"Continuous2DCoord",
			"Discrete2dCoord",
			"e",
			"Continuous2DCoord",
			"Discrete2DNeighbourhood",
			"Discrete2DCoord",
			"e",
			"HACMsg",
			"HACAgentState",
			"HACEnvCell",
			"HACEnvLink",
			"FrSIRSSpatialAgentIn",
			"FrSIRSSpatialAgentOut",
			"FrSIRSSpatialAgentBehaviour",
			"RecursiveABSAgentIn",
			"RecursiveABSAgentOut",
			"RecursiveABSAgentState",
			"RecursiveABSMsg",
			"RecursiveABSEnvCell",
			"PolicyEffectsEnvLink",
			"PolicyEffectsEnvCell",
			"PolicyEffectsState",
			"PolicyEffectsMsg",
			"FrSIRSNetworkEnvCell",
			"FrSIRSNetworkEnvLink",
			"PolicyEffectsLink",
			"FrSIRSSpatialAgentBehaviour",
			"FrSIRSSpatialMsg",
			"FrSIRSSpatialAgentIn",
			"FrSIRSSpatialAgentOut",
			"FrSIRSSpatialAgentBehaviour",
			"FrSIRSSpatialAgentIn",
			"FrSIRSSpatialAgentOut",
			"FrSIRSSpatialEnvLink",
			"FrSIRSSpatialEnvCell",
			"FrSIRSSpatialMsg",
			"FrSIRSSpatialAgentState",
			"onMessageMState",
			"FrSIRSNetworkAgentIn",
			"FrSIRSNetworkAgentBehaviour",
			"FrSIRSNetworkAgentOut",
			"FrSIRSNetworkEnvLink",
			"FrSIRSNetworkEnvCell",
			"FrSIRSNetworkAgentState",
			"FrSIRSNetworkMsg",
			"SysDynSIRStockState",
			"SysDynSIRMsg",
			"SysDynSIREnvLink",
			"SysDynSIREnvCell",
			"FrSIRSAgentOut",
			"FrSIRSAgentIn",
			"FrSIRSAgentBehaviour",
			"agentCellOnPos",
			"updateDomainStateM",
			"domainStateFieldM",
			"updateDomainStateM",
			"updateDomainState",
			"distanceManhattan",
			"Environment",
			"nvironment ec l ",
			"AgentOut s m ec l",
			"AgentIn s m ec l",
			"AgentDef s m ec l",
			"PDAgentState",
			"PDAgentIn",
			"PDAgentOut",
			"PDEnvironment",
			"PDMsg",
			"PDLinkLabel",
			"PDCell",
			"WildfireAgentOut",
			"WildfireAgentIn",
			"WildfireEnvironment",
			"hexLitToInt",
			"-------------------------------------------------------------------------------"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "examples/Main.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1532,
						"regions":
						{
						},
						"selection":
						[
							[
								1140,
								1169
							]
						],
						"settings":
						{
							"syntax": "Packages/SublimeHaskell/Syntaxes/Haskell-SublimeHaskell.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/FRP/FrABS/Rendering/GlossSimulator.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6488,
						"regions":
						{
						},
						"selection":
						[
							[
								3269,
								3269
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1530.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/FRP/FrABS/Agent/Agent.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10637,
						"regions":
						{
						},
						"selection":
						[
							[
								10209,
								10209
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4289.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 273.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.haskell_run_output":
	{
		"height": 100.0
	},
	"output.sublime_haskell_error_panel":
	{
		"height": 118.0
	},
	"output.sublime_haskell_output_panel":
	{
		"height": 302.0
	},
	"pinned_build_system": "Packages/Haskell/Haskell.sublime-build",
	"project": "frabs.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 355.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
