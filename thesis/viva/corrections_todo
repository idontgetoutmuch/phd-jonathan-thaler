#########################################################################
## REFERENCES
#########################################################################
Some references are “off”:
- page 102: [84] does not seem to be the best reference for illustrating the advantages of doing parallelism in Haskell
- [91] should probably be marked “2nd Ed”
- [92] doesn’t do the job required by the sentence “The same problem was reported in [92], which tried to reproduce the work of Gintis [63].” The article to be cited is probably Botta et al. 2013
- page 44 [179] seems to be given as a reference for SIR
- I haven’t been able to find in [10] the report of difficulties in reproducing [8]. I only checked because the two papers have the same author. A page number would be helpful here.
- Some comments about references:
	some minor e.g. [91] is Graham's book including 2nd Edition.
	Some references which are out of context. e. g. [92] is not the point of this paper
	-> see EE report for these corrections for more appropriate suggestions for replacements including correct citing of Dr Botta.
- Go through references again and check for appropriateness of references, sometimes they are a bit strange and not the standard references. Ask for advice on this from IE if needed.

#########################################################################
## QUICKCHECK BOTTOM issue
#########################################################################
- P144 prop_reverse_reverse you have written as ‘pass’; it fails! Fix please.
	E.g. head(1: undefined)=1
		Head(reverse(reverse(1:undefined)) -> undefined.
atm my plan is to add a clarification that explains that strictly speaking this fails if we also incorporate bottom, however we deliberately ignore cases of bottom and assume that they will not occur: quickcheck does not generate it and if we produce it ourselves, it will crash, which will clearly show there is something wrong

Martin: I think the terminology is “partial versus total correctness”. You can’t say that rev(rev x) == x is “totally correct” because of the bottom issue (it’s partially correct as it works in all other cases), but it doesn’t matter really and so we ignore bottom as argued by that paper I just sent
In fact that paper makes a stronger argument — it shows, using the language presented in the paper, that you can’t change a terminating expression into a non-terminating one by rewriting according to partial equalities (such as your example)

All quickcheck properties are assumed to be total

read and cite https://www.cs.ox.ac.uk/jeremy.gibbons/publications/fast+loose.pdf

@article{danielsson2006fast,
  title={Fast and loose reasoning is morally correct},
  author={Danielsson, Nils Anders and Hughes, John and Jansson, Patrik and Gibbons, Jeremy},
  journal={ACM SIGPLAN Notices},
  volume={41},
  number={1},
  pages={206--217},
  year={2006},
  publisher={ACM New York, NY, USA}
}


#########################################################################
## PERFORMANCE explanations
#########################################################################
- Pg 99 Why performance difference between Java and FP versions? Clarify. Is this due to differences in: Array updates; Nested loops in Haskell to update the sleeping agents; Fixing this with mutable arrays.
	- Explain the reasons here as opposed to deferring any discussion until Chapters 7&8.
- NOTE BY ME: java code is to be found in thesis/code/java

#########################################################################
## ACTIVITY DIAGRAM NEEDED
#########################################################################
- NOTE by me: add UML activity diagram - p 27 add diagram to explained

#########################################################################
## Rewrite abstract
#########################################################################
- The abstract is excessively long and this should be shortened to be more concise (ideally one page maximum), and to stress the findings of the thesis.

#########################################################################
## ParT ISSUE
#########################################################################
- P107 Discussion of ParT: this explanation needs strengthening by thinking about monads differently, {Bind vs unit and join}, 7.2.1 rewrite for clarity
based on the corrected information in the next two screenshot panels of notes: See notes below.

#########################################################################
## RNG / CORRELATION ISSUE
#########################################################################
- Provide better definitions of FRP, Yampa and arrowised systems.

- P63 discussion of the correlation and a random number generator around g.; susceptible g -> infected g,: is occasionally g being updated or not? Clarify.

- Are you creating the same deterministic random number stream? Clarify.

- Are the dynamic correlated versus not correlated? Clarify.

- Do you need to use monadic stream functions? Can this threading be done manually with Yampa? → Would you have to change the implementation of ‘occasionally’. Clarify.

- To do these tests : Yampa with correlation, MSF without generator; will you see a significant difference? Clarify as this DOES have implcations for the effectiveness due to correlations. This should be added to the thesis IF you see a difference. If so this needs to be tied in to other chapters.

- Add an illustration to show the difference IF it makes a difference to the results.

- Does this dependency between agents on a determinate random number generator exist depending on the implementation of the random number generator? I.e. true vs pseudorandom number generators as pseudo numbers are not independent ⇒ would be worth checking and clarifying.




#########################################################################
## UNCLEAR, questions to internal
#########################################################################
- Individual contributions of the candidate to each of the listed papers should be added, to make it clear how these publications relate to what is written in the thesis.

Some stilted formulations:
page 121: “by running each agent in a thread will guarantee” something seems to be missing




#########################################################################
## clarifications by me when submitting to internal
#########################################################################
- P18 add Test Driven Development as part of a contribution
	I have already added Test Driven Development, however as far as I remember the issue was that i did not explain it before, so i added a minimal explanation. TODO add where this is to be found now

- P24 The differences between Agent based simulation and ABMS needs to be clarified. 
	Instead of clarifying it at this point, i added a short introduction and clarification of the term ABMS (vs ABS) in the background section on ABS right after the ABS properties list. TODO add where this is to be found now

- [10] and [8] has to be checked and if it is in there you have to add a page numbers
	- original submission: [10] and [8] were correct. However, [10] did not conduct the study but [12] did, so we left [10] in the text, because it only talks about the struggles, and then we clarified that the reproduction of [8] happened in [12], not in [10]. 
	- resubmission: this can be found in the second paragraph of chapter 1 motivation. references have changed each by 1: [8] -> [9], [10] -> [11], [12] -> [13]

- P165 Justify your 90% and missing parentheses in code
	- i already pointed out that we expect 90% but i clarified on it a bit more, i hope this is sufficient now
