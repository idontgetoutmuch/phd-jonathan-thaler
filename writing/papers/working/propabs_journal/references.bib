
@incollection{epstein_chapter_2006,
	title = {Chapter 34 {Remarks} on the {Foundations} of {Agent}-{Based} {Generative} {Social} {Science}},
	volume = {2},
	url = {http://www.sciencedirect.com/science/article/pii/S1574002105020344},
	abstract = {This chapter treats a variety of epistemological issues surrounding generative explanation in the social sciences, and discusses the role of agent-based computational models in generative social science.},
	urldate = {2017-05-05},
	booktitle = {Handbook of {Computational} {Economics}},
	publisher = {Elsevier},
	author = {Epstein, Joshua M.},
	editor = {Judd, L. Tesfatsion {and} K. L.},
	year = {2006},
	doi = {10.1016/S1574-0021(05)02034-4},
	keywords = {Agent-based modeling, generative social science, philosophy of social science},
	pages = {1585--1604},
	file = {ScienceDirect Full Text PDF:/home/jonathan/Zotero/storage/TA4A87QT/Epstein - 2006 - Chapter 34 Remarks on the Foundations of Agent-Bas.pdf:application/pdf;ScienceDirect Snapshot:/home/jonathan/Zotero/storage/CT5Z2KXD/S1574002105020344.html:text/html}
}

@article{kermack_contribution_1927,
	title = {A {Contribution} to the {Mathematical} {Theory} of {Epidemics}},
	volume = {115},
	issn = {1364-5021, 1471-2946},
	url = {http://rspa.royalsocietypublishing.org/content/115/772/700},
	doi = {10.1098/rspa.1927.0118},
	language = {en},
	number = {772},
	urldate = {2017-11-06},
	journal = {Proceedings of the Royal Society of London A: Mathematical, Physical and Engineering Sciences},
	author = {Kermack, W. O. and McKendrick, A. G.},
	month = aug,
	year = {1927},
	pages = {700--721},
	file = {Full Text PDF:/home/jonathan/Zotero/storage/57XZARXB/Kermack and McKendrick - 1927 - A Contribution to the Mathematical Theory of Epide.pdf:application/pdf;Snapshot:/home/jonathan/Zotero/storage/PLT8SIX5/700.html:text/html}
}

@inproceedings{macal_agent-based_2010,
	address = {Baltimore, Maryland},
	series = {{WSC} '10},
	title = {To {Agent}-based {Simulation} from {System} {Dynamics}},
	isbn = {978-1-4244-9864-2},
	url = {http://dl.acm.org/citation.cfm?id=2433508.2433551},
	abstract = {Agent-based simulation (ABS) is a recent modeling technique that is being widely used in modeling complex social systems. Forrester's System Dynamics (SD) is another longstanding technique for modeling social systems. Several classical models of systems, such as the Kermack-McKendrick model of epidemiology, the Lotka-Volterra equations for modeling predator-prey relationships, and the Bass model for innovation diffusion are formulated as systems of differential equations and have corresponding System Dynamics representations as difference equations. The ABS and SD modeling approaches take fundamentally different perspectives when modeling a system, which can be characterized as bottom-up (ABS) versus top-down (SD). Yet many systems can be equivalently modeled by either approach. In this paper, we present a formal specification for SD and ABS models, use the specification to derive equivalent ABS representations, and present an example of an SIR epidemic model having SD and ABS counterparts.},
	urldate = {2017-10-05},
	booktitle = {Proceedings of the {Winter} {Simulation} {Conference}},
	publisher = {Winter Simulation Conference},
	author = {Macal, Charles M.},
	year = {2010},
	pages = {371--382},
	file = {ACM Full Text PDF:/home/jonathan/Zotero/storage/7WFBF4UW/Macal - 2010 - To Agent-based Simulation from System Dynamics.pdf:application/pdf}
}

@incollection{balci_verification_1998,
	title = {Verification, {Validation}, and {Testing}},
	copyright = {Copyright © 1998 John Wiley \& Sons, Inc.},
	isbn = {978-0-470-17244-5},
	url = {http://onlinelibrary.wiley.com/doi/10.1002/9780470172445.ch10/summary},
	abstract = {This chapter contains sections titled:


*
Introduction


*
Life Cycle and a Case Study


*
Verification, Validation, and Testing Principles


*
Verification, Validation, and Testing Techniques


*
Credibility Assessment Stages


*
Concluding Remarks


*
References},
	language = {en},
	urldate = {2017-05-18},
	booktitle = {Handbook of {Simulation}},
	publisher = {John Wiley \& Sons, Inc.},
	author = {Balci, Osman},
	editor = {Banks, Jerry},
	year = {1998},
	doi = {10.1002/9780470172445.ch10},
	keywords = {counterintuitive behavior, military combat systems validation, response-surface methodologies, simulation language compiler, trace-driven simulation methods},
	pages = {335--393},
	file = {Snapshot:/home/jonathan/Zotero/storage/B8BT8SA3/summary.html:text/html}
}

@article{galan_errors_2009,
	title = {Errors and {Artefacts} in {Agent}-{Based} {Modelling}},
	volume = {12},
	issn = {1460-7425},
	url = {http://jasss.soc.surrey.ac.uk/12/1/1.html},
	abstract = {The objectives of this paper are to define and classify different types of errors and artefacts that can appear in the process of developing an agent-based model, and to propose activities aimed at avoiding them during the model construction and testing phases. To do this in a structured way, we review the main concepts of the process of developing such a model – establishing a general framework that summarises the process of designing, implementing, and using agent-based models. Within this framework we identify the various stages where different types of errors and artefacts may appear. Finally we propose activities that could be used to detect (and hence eliminate) each type of error or artefact.},
	number = {1},
	journal = {Journal of Artificial Societies and Social Simulation},
	author = {Galán, José Manuel and Izquierdo, Luis R. and Izquierdo, Segismundo S. and Santos, José Ignacio and del Olmo, Ricardo and López-Paredes, Adolfo and Edmonds, Bruce},
	year = {2009},
	keywords = {Replication, Verification, Agent-Based Modelling, Artefact, Error, Modelling Roles},
	pages = {1}
}

@article{claessen_testing_2002,
	title = {Testing {Monadic} {Code} with {QuickCheck}},
	volume = {37},
	issn = {0362-1340},
	url = {http://doi.acm.org/10.1145/636517.636527},
	doi = {10.1145/636517.636527},
	abstract = {QuickCheck is a previously published random testing tool for Haskell programs. In this paper we show how to use it for testing monadic code, and in particular imperative code written using the ST monad. QuickCheck tests a program against a specification: we show that QuickCheck's specification language is sufficiently powerful to represent common forms of specifications: algebraic, model-based (both functional and relational), and pre-/post-conditional. Moreover, all these forms of specification can be used directly for testing. We define a new language of monadic properties, and make a link between program testing and the notion of observational equivalence.},
	number = {12},
	urldate = {2017-05-11},
	journal = {SIGPLAN Not.},
	author = {Claessen, Koen and Hughes, John},
	month = dec,
	year = {2002},
	pages = {47--59},
	file = {ACM Full Text PDF:/home/jonathan/Zotero/storage/3SMCN5GK/Claessen and Hughes - 2002 - Testing Monadic Code with QuickCheck.pdf:application/pdf}
}

@inproceedings{asta_investigation_2014,
	title = {An investigation on test driven discrete event simulation},
	url = {http://eprints.nottingham.ac.uk/28211/},
	abstract = {This paper deals with the application of modern software development tools on simulation development. Recently, Agile Software Development (ASD) methods enjoy an increasing popularity. eXtreme Programming (XP) techniques, one of the techniques which belong to the ASD group of methods is a software development method which improves software quality and responsiveness of software projects through introducing short development cycles and a Test Driven Development (TDD) philosophy throughout the development. In this paper, we particularly pay attention to the application of the TDD by approaching simulation development from a test-first perspective. This study consists of a feasibility study of applying the TDD technique in simulation development in its various levels, say, acceptance and unit testing. Moreover, a simulation case study of a surgical ward has been considered, designed and implemented using the AnyLogic simulation toolkit. Our study differs from the mainstream in many ways. It addresses the feasibility of Test-Driven Simulation Development in Visual Interactive Modelling and Simulation (VIMS) environments as well as providing an insight into how the test-first concept can further help with the choice of components and acceptance testing.},
	booktitle = {Operational {Research} {Society} {Simulation} {Workshop} 2014 ({SW}14)},
	author = {Asta, Shahriar and Özcan, Ender and Siebers, Peer-Olaf},
	month = apr,
	year = {2014}
}

@book{beck_test_2002,
	address = {Boston},
	edition = {01 edition},
	title = {Test {Driven} {Development}: {By} {Example}},
	isbn = {978-0-321-14653-3},
	shorttitle = {Test {Driven} {Development}},
	abstract = {Quite simply, test-driven development is meant to eliminate fear in application development. While some fear is healthy (often viewed as a conscience that tells programmers to "be careful!"), the author believes that byproducts of fear include tentative, grumpy, and uncommunicative programmers who are unable to absorb constructive criticism. When programming teams buy into TDD, they immediately see positive results. They eliminate the fear involved in their jobs, and are better equipped to tackle the difficult challenges that face them. TDD eliminates tentative traits, it teaches programmers to communicate, and it encourages team members to seek out criticism However, even the author admits that grumpiness must be worked out individually! In short, the premise behind TDD is that code should be continually tested and refactored. Kent Beck teaches programmers by example, so they can painlessly and dramatically increase the quality of their work.},
	language = {English},
	publisher = {Addison-Wesley Professional},
	author = {Beck, Kent},
	month = nov,
	year = {2002}
}

@inproceedings{claessen_quickcheck_2000,
	address = {New York, NY, USA},
	series = {{ICFP} '00},
	title = {{QuickCheck} - {A} {Lightweight} {Tool} for {Random} {Testing} of {Haskell} {Programs}},
	isbn = {978-1-58113-202-1},
	shorttitle = {{QuickCheck}},
	url = {http://doi.acm.org/10.1145/351240.351266},
	doi = {10.1145/351240.351266},
	abstract = {Quick Check is a tool which aids the Haskell programmer in formulating and testing properties of programs. Properties are described as Haskell functions, and can be automatically tested on random input, but it is also possible to define custom test data generators. We present a number of case studies, in which the tool was successfully used, and also point out some pitfalls to avoid. Random testing is especially suitable for functional programs because properties can be stated at a fine grain. When a function is built from separately tested components, then random testing suffices to obtain good coverage of the definition under test.},
	urldate = {2016-11-16},
	booktitle = {Proceedings of the {Fifth} {ACM} {SIGPLAN} {International} {Conference} on {Functional} {Programming}},
	publisher = {ACM},
	author = {Claessen, Koen and Hughes, John},
	year = {2000},
	pages = {268--279},
	file = {ACM Full Text PDF:/home/jonathan/Zotero/storage/JZJFVIQK/Claessen and Hughes - 2000 - QuickCheck A Lightweight Tool for Random Testing .pdf:application/pdf;ACM Full Text PDF:/home/jonathan/Zotero/storage/CKGG42NQ/Claessen and Hughes - 2000 - QuickCheck A Lightweight Tool for Random Testing .pdf:application/pdf}
}

@article{onggo_test-driven_2016,
	title = {Test-driven simulation modelling: {A} case study using agent-based maritime search-operation simulation},
	volume = {254},
	shorttitle = {Test-driven simulation modelling},
	doi = {10.1016/j.ejor.2016.03.050},
	abstract = {Model verification and validation (V\&V) is one of the most important activities in simulation modelling. Model validation is especially challenging for Agent-Based Simulation (ABS). Techniques that can help to improve V\&V in simulation modelling are needed. This paper proposes a V\&V technique called TestDriven Simulation Modelling (TDSM) which applies techniques from Test-Driven Development in software engineering to simulation modelling. The main principle in TDSM is that a unit test for a simulation model has to be specified before the simulation model is implemented. Hence, TDSM explicitly embeds V\&V in simulation modelling. We use a case study in maritime search operations to demonstrate how TDSM can be used in practice. Maritime search operations (and search operations in general) are one of the classic applications of Operational Research (OR). Hence, we can use analytical models from the vast search theory literature for unit tests in TDSM. The results show that TDSM is a useful technique in the verification and validation of simulation models, especially ABS models. This paper also shows that ABS can offer an alternative modelling approach in the analysis of maritime search operations. © 2016 Elsevier B.V. All rights reserved.},
	journal = {European Journal of Operational Research},
	author = {Onggo, Bhakti S. S. and Karatas, Mumtaz},
	year = {2016},
	keywords = {Agent-based model, Simulation, Software engineering, Test-driven development, Unit testing, Verification and validation},
	pages = {517--531}
}

@inproceedings{hughes_quickcheck_2007,
	address = {Berlin, Heidelberg},
	series = {{PADL}'07},
	title = {{QuickCheck} {Testing} for {Fun} and {Profit}},
	isbn = {978-3-540-69608-7},
	url = {http://dx.doi.org/10.1007/978-3-540-69611-7\_1},
	doi = {10.1007/978-3-540-69611-7\_1},
	abstract = {One of the nice things about purely functional languages is that functions often satisfy simple properties, and enjoy simple algebraic relationships. Indeed, if the functions of an API satisfy elegant laws, that in itself is a sign of a good design—the laws not only indicate conceptual simplicity, but are useful in practice for simplifying programs that use the API, by equational reasoning or otherwise.},
	urldate = {2018-09-24},
	booktitle = {Proceedings of the 9th {International} {Conference} on {Practical} {Aspects} of {Declarative} {Languages}},
	publisher = {Springer-Verlag},
	author = {Hughes, John},
	year = {2007},
	pages = {1--32}
}

@inproceedings{runciman_smallcheck_2008,
	address = {New York, NY, USA},
	series = {Haskell '08},
	title = {Smallcheck and {Lazy} {Smallcheck}: {Automatic} {Exhaustive} {Testing} for {Small} {Values}},
	isbn = {978-1-60558-064-7},
	shorttitle = {Smallcheck and {Lazy} {Smallcheck}},
	url = {http://doi.acm.org/10.1145/1411286.1411292},
	doi = {10.1145/1411286.1411292},
	abstract = {This paper describes two Haskell libraries for property-based testing. Following the lead of QuickCheck, these testing libraries SmallCheck and Lazy SmallCheck also use type-based generators to obtain test-sets of finite values for which properties are checked, and report any counter-examples found. But instead of using a sample of randomly generated values they test properties for all values up to some limiting depth, progressively increasing this limit. The paper explains the design and implementation of both libraries and evaluates them in comparison with each other and with QuickCheck.},
	urldate = {2018-09-18},
	booktitle = {Proceedings of the {First} {ACM} {SIGPLAN} {Symposium} on {Haskell}},
	publisher = {ACM},
	author = {Runciman, Colin and Naylor, Matthew and Lindblad, Fredrik},
	year = {2008},
	keywords = {embedded language, exhaustive search, lazy evaluation, property-based testing, type classes},
	pages = {37--48},
	file = {ACM Full Text PDF:/home/jonathan/Zotero/storage/GI69KFTB/Runciman et al. - 2008 - Smallcheck and Lazy Smallcheck Automatic Exhausti.pdf:application/pdf}
}

@article{north_complex_2013,
	title = {Complex adaptive systems modeling with {Repast} {Simphony}},
	volume = {1},
	issn = {2194-3206},
	url = {https://doi.org/10.1186/2194-3206-1-3},
	doi = {10.1186/2194-3206-1-3},
	abstract = {This paper is to describe development of the features and functions of Repast Simphony, the widely used, free, and open source agent-based modeling environment that builds on the Repast 3 library. Repast Simphony was designed from the ground up with a focus on well-factored abstractions. The resulting code has a modular architecture that allows individual components such as networks, logging, and time scheduling to be replaced as needed. The Repast family of agent-based modeling software has collectively been under continuous development for more than 10 years.},
	number = {1},
	urldate = {2018-08-02},
	journal = {Complex Adaptive Systems Modeling},
	author = {North, Michael J. and Collier, Nicholson T. and Ozik, Jonathan and Tatara, Eric R. and Macal, Charles M. and Bragen, Mark and Sydelko, Pam},
	month = mar,
	year = {2013},
	pages = {3},
	file = {Full Text PDF:/home/jonathan/Zotero/storage/JHYNHZPM/North et al. - 2013 - Complex adaptive systems modeling with Repast Simp.pdf:application/pdf;Snapshot:/home/jonathan/Zotero/storage/5CDV3776/2194-3206-1-3.html:text/html}
}

@inproceedings{collier_test-driven_2013,
	title = {Test-driven agent-based simulation development},
	doi = {10.1109/WSC.2013.6721538},
	abstract = {Developing a useful agent-based model and simulation typically involves acquiring knowledge of the model's domain, developing the model itself, and then translating the model into software. This process can be complex and is an iterative one where changes in domain knowledge and model requirements or specifications can cause changes in the software that in turn may require additional modeling and domain knowledge. Test-driven development is a software development technique that can help ameliorate this complexity by evolving a loosely coupled flexible design, driven by the creation of many small, automated unit tests. When the focus shifts to writing small tests that exercise the simulations behavior, the larger problem of translating a conceptual model into working code is decomposed into a series of much smaller, more manageable and highly focused translations. This paper explores the application of this technique to agent-based simulation development with examples from Repast Simphony, ReLogo and Repast HPC.},
	booktitle = {2013 {Winter} {Simulations} {Conference} ({WSC})},
	author = {Collier, N. and Ozik, J.},
	month = dec,
	year = {2013},
	keywords = {simulation, software agents, Testing, agent-based model, Buildings, Context, Diseases, domain knowledge, Employment, formal specification, knowledge acquisition, model requirements, model specifications, Schedules, Software, software development, test-driven agent-based simulation},
	pages = {1551--1559},
	file = {IEEE Xplore Abstract Record:/home/jonathan/Zotero/storage/C9W7NRJQ/6721538.html:text/html;IEEE Xplore Full Text PDF:/home/jonathan/Zotero/storage/A3PGS2JD/Collier and Ozik - 2013 - Test-driven agent-based simulation development.pdf:application/pdf}
}

@article{polhill_ghost_2005,
	title = {The {Ghost} in the {Model} (and {Other} {Effects} of {Floating} {Point} {Arithmetic})},
	volume = {8},
	issn = {1460-7425},
	url = {http://jasss.soc.surrey.ac.uk/8/1/5.html},
	abstract = {This paper will explore the effects of errors in floating point arithmetic in two published agent-based models: the first a model of land use change (Polhill et al. 2001; Gotts et al. 2003), the second a model of the stock market (LeBaron et al. 1999). The first example demonstrates how branching statements with floating point operands of comparison operators create a high degree of nonlinearity, leading in this case to the creation of 'ghost' agents – visible to some parts of the program but not to others. A potential solution to this problem is proposed. The second example shows how mathematical descriptions of models in the literature are insufficient to enable exact replication of work since mathematically equivalent implementations in terms of real number arithmetic are not equivalent in terms of floating point arithmetic.},
	number = {1},
	journal = {Journal of Artificial Societies and Social Simulation},
	author = {Polhill, J. Gary and Izquierdo, Luis R. and Gotts, Nicholas M.},
	year = {2005},
	keywords = {Replication, Agent Based Modelling, Floating Point Arithmetic, Interval Arithmetic},
	pages = {1}
}

@incollection{ormerod_validation_2006,
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Validation and {Verification} of {Agent}-{Based} {Models} in the {Social} {Sciences}},
	isbn = {978-3-642-01108-5 978-3-642-01109-2},
	url = {https://link.springer.com/chapter/10.1007/978-3-642-01109-2_10},
	abstract = {This paper considers some of the difficulties in establishing verificaction and validation of agent based models. The fact that most ABMs are solved by simulation rather than analytically blurs the distinction between validation and verification. We suggest that a clear description of the phenomena to be explained by the model and testing for the simplest possible realistic agent rules of behaviour are key to the successful validation of ABMs and will provide the strongest base for enabling model comparison and acceptance. In particular, the empirical evidence that in general agents act intuitively rather than rationally is now strong. This implies that models which assign high levels of cognition to their agents require particularly strong justification if they are to be considered valid.},
	language = {en},
	urldate = {2018-06-07},
	booktitle = {Epistemological {Aspects} of {Computer} {Simulation} in the {Social} {Sciences}},
	publisher = {Springer, Berlin, Heidelberg},
	author = {Ormerod, Paul and Rosewell, Bridget},
	month = oct,
	year = {2006},
	doi = {10.1007/978-3-642-01109-2_10},
	pages = {130--140},
	file = {Snapshot:/home/jonathan/Zotero/storage/WCM352LP/978-3-642-01109-2_10.html:text/html}
}

@book{robinson_simulation:_2014,
	title = {Simulation: {The} {Practice} of {Model} {Development} and {Use}},
	isbn = {978-1-137-32802-1},
	shorttitle = {Simulation},
	abstract = {The new edition of this successful textbook provides a comprehensive introduction to simulation, foregrounding the topic as an applied problem-solving tool. Guiding readers through the key stages in a simulation project in terms of both the technical requirements and the project management issues surrounding it, the book will enable students to develop appropriate valid conceptual models, perform simulation experiments, analyse the results and draw insightful conclusions. The author’s engaging style and authoritative knowledge of the subject make the book as accessible as it is essential, drawing on case studies and complementary online content to encourage a critical engagement with the topic.This is an ideal textbook for those studying on upper level undergraduate and postgraduate degree courses in Business and Management and MBA programmes, and is a core text for those specialising in operations management. In addition, it is an important text for students taking Simulation modules on Engineering, Computer Science or Mathematics degree programmes.},
	language = {en},
	publisher = {Macmillan Education UK},
	author = {Robinson, Stewart},
	month = sep,
	year = {2014},
	note = {Google-Books-ID: Dtn0oAEACAAJ},
	keywords = {Business \& Economics / General, Business \& Economics / Business Mathematics}
}

@inproceedings{thaler_pure_2018,
	address = {New York, NY, USA},
	series = {{IFL} 2018},
	title = {Pure {Functional} {Epidemics}: {An} {Agent}-{Based} {Approach}},
	isbn = {978-1-4503-7143-8},
	shorttitle = {Pure {Functional} {Epidemics}},
	url = {http://doi.acm.org/10.1145/3310232.3310372},
	doi = {10.1145/3310232.3310372},
	abstract = {Agent-Based Simulation (ABS) is a methodology in which a system is simulated in a bottom-up approach by modelling the micro interactions of its constituting parts, called agents, out of which the global system behaviour emerges. So far mainly object-oriented techniques and languages have been used in ABS. Using the SIR model of epidemiology, which simulates the spreading of an infectious disease through a population, we demonstrate how to use pure Functional Reactive Programming to implement ABS. With our approach we can guarantee the reproducibility of the simulation at compile time and rule out specific classes of run-time bugs, something that is not possible with traditional object-oriented languages. Also, we found that the representation in a purely functional format is conceptually quite elegant and opens the way to formally reason about ABS.},
	urldate = {2019-05-03},
	booktitle = {Proceedings of the 30th {Symposium} on {Implementation} and {Application} of {Functional} {Languages}},
	publisher = {ACM},
	author = {Thaler, Jonathan and Altenkirch, Thorsten and Siebers, Peer-Olaf},
	year = {2018},
	note = {event-place: Lowell, MA, USA},
	keywords = {Agent-Based Simulation, Functional Reactive Programming, Monadic Stream Functions},
	pages = {1--12},
	file = {Submitted Version:/home/jonathan/Zotero/storage/WL2PCIGX/Thaler et al. - 2018 - Pure Functional Epidemics An Agent-Based Approach.pdf:application/pdf}
}

@incollection{wald_sequential_1992,
	address = {New York, NY},
	series = {Springer {Series} in {Statistics}},
	title = {Sequential {Tests} of {Statistical} {Hypotheses}},
	isbn = {978-1-4612-0919-5},
	url = {https://doi.org/10.1007/978-1-4612-0919-5\_18},
	abstract = {By a sequential test of a statistical hypothesis is meant any statistical test procedure which gives a specific rule, at any stage of the experiment (at the n-th trial for each integral value of n), for making one of the following three decisions: (1) to accept the hypothesis being tested (null hypothesis), (2) to reject the null hypothesis, (3) to continue the experiment by making an additional observation. Thus, such a test procedure is carried out sequentially. On the basis of the first trial, one of the three decisions mentioned above is made. If the first or the second decision is made, the process is terminated. If the third decision is made, a second trial is performed. Again on the basis of the first two trials one of the three decisions is made and if the third decision is reached a third trial is performed, etc. This process is continued until either the first or the second decision is made.},
	language = {en},
	urldate = {2019-05-03},
	booktitle = {Breakthroughs in {Statistics}: {Foundations} and {Basic} {Theory}},
	publisher = {Springer New York},
	author = {Wald, A.},
	editor = {Kotz, Samuel and Johnson, Norman L.},
	year = {1992},
	doi = {10.1007/978-1-4612-0919-5\_18},
	keywords = {Moment Generate Function, Powerful Test, Sequential Probability Ratio Test, Sequential Test, Statistical Hypothesis},
	pages = {256--298}
}

@inproceedings{thaler_show_2019,
 author = {Thaler, Jonathan and Siebers, Peer-Olaf},
 title = {Show Me Your Properties: The Potential of Property-based Testing in Agent-based Simulation},
 booktitle = {Proceedings of the 2019 Summer Simulation Conference},
 series = {SummerSim '19},
 year = {2019},
 location = {Berlin, Germany},
 pages = {1:1--1:12},
 articleno = {1},
 numpages = {12},
 url = {http://dl.acm.org/citation.cfm?id=3374138.3374139},
 acmid = {3374139},
 publisher = {Society for Computer Simulation International},
 address = {San Diego, CA, USA},
 keywords = {Haskell, agent-based simulation, property-based testing, validation \&\#38; verification}
}

@book{thaler_repository_2019,
	title = {Repository of {Agent}-{Based} {SIR} implementation in {Haskell}},
	url = {https://github.com/thalerjonathan/haskell-sir},
	language = {English},
	author = {Thaler, J.},
	month = may,
	year = {2019},
	annote = {Accessed January 10, 2020}
}

@book{openabm_model_database,
	title = {Computational Model Library},
	url = {https://www.comses.net/codebases/},
	language = {English},
	author = {ComSES},
	month = may,
	year = {2019},
	annote = {Accessed January 10, 2020}
}

@InProceedings{hammer_tongs_north_2018,
author="North, Michael J.",
editor="Demazeau, Yves
and An, Bo
and Bajo, Javier
and Fern{\'a}ndez-Caballero, Antonio",
title="Hammer or Tongs: How Best to Build Agent-Based Models?",
booktitle="Advances in Practical Applications of Agents, Multi-Agent Systems, and Complexity: The PAAMS Collection",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="3--11",
abstract="Agent-based modeling has been widely applied to solve problems in contexts ranging from exploratory research studies to focused industrial practice. As the application of agent-based modeling has grown, developers have advocated a wide and diverse variety of development techniques. Some of these techniques inform elements of model creation, validation, or use. Others are comprehensive development methodologies. The popularity of agent-based modeling makes it impossible to include every development technique mentioned in the literature. Instead, this paper focuses on providing a representative sample that includes the techniques with the most practical utility along with those that are widely used or have received substantial attention. The sample reviewed in this paper includes techniques advocated specifically for agent-based modeling along with general software development approaches. Due to their importance, verification and validation techniques for agent-based modeling are specially highlighted. The paper concludes with a summary and recommendations on how best to build agent-based models.",
isbn="978-3-319-94580-4"
}

@inproceedings{brambilla_property-driven_2012,
	address = {Richland, SC},
	series = {{AAMAS} '12},
	title = {Property-driven {Design} for {Swarm} {Robotics}},
	isbn = {978-0-9817381-1-6},
	url = {http://dl.acm.org/citation.cfm?id=2343576.2343596},
	abstract = {In this paper, we propose a novel top-down design method for the development of collective behaviors of swarm robotics systems called property-driven design. Swarm robotics systems are usually designed and developed using a code-and-fix approach, that is, the developer devises, tests and modifies the individual robot behaviors until a desired collective behavior is obtained. The code-and-fix approach can be very time consuming and relies completely on the ingenuity and expertise of the designer. The idea of property-driven design is that a swarm robotics system can be described by specifying formally a set of desired properties. In an iterative process similar to test-driven development, the developer produces a model of the system that satisfies the desired properties. Subsequently, the system is implemented in simulation and using real robots. Property-driven design helps to minimize the risk of developing a system that does not satisfy the required properties, and to promote the reuse of hardware independent models. In this paper, we start by giving a general description of the method. We then present a possible way to apply it by using Discrete Time Markov Chains (DTMC) and Probabilistic Computation Tree Logic* (PCTL*). Finally, we conclude by presenting the application of the proposed method to the design and development of a swarm robotics system performing aggregation.},
	urldate = {2018-09-26},
	booktitle = {Proceedings of the 11th {International} {Conference} on {Autonomous} {Agents} and {Multiagent} {Systems} - {Volume} 1},
	publisher = {International Foundation for Autonomous Agents and Multiagent Systems},
	author = {Brambilla, Manuele and Pinciroli, Carlo and Birattari, Mauro and Dorigo, Marco},
	year = {2012},
	keywords = {aggregation, swarm engineering, swarm robotics, top-down design},
	pages = {139--146},
	file = {ACM Full Text PDF:/home/jonathan/Zotero/storage/SZIZCDJR/Brambilla et al. - 2012 - Property-driven Design for Swarm Robotics.pdf:application/pdf}
}

@article{gurcan_generic_2013,
	title = {A generic testing framework for agent-based simulation models},
	volume = {7},
	issn = {1747-7786},
	url = {https://doi.org/10.1057/jos.2012.26},
	doi = {10.1057/jos.2012.26},
	abstract = {Agent-based modelling and simulation (ABMS) had an increasing attention during the last decade. However, the weak validation and verification of agent-based simulation models makes ABMS hard to trust. There is no comprehensive tool set for verification and validation of agent-based simulation models, which demonstrates that inaccuracies exist and/or reveals the existing errors in the model. Moreover, on the practical side, many ABMS frameworks are in use. In this sense, we designed and developed a generic testing framework for agent-based simulation models to conduct validation and verification of models. This paper presents our testing framework in detail and demonstrates its effectiveness by showing its applicability on a realistic agent-based simulation case study.},
	language = {en},
	number = {3},
	urldate = {2018-09-27},
	journal = {Journal of Simulation},
	author = {Gurcan, O. and Dikenelli, O. and Bernon, C.},
	month = aug,
	year = {2013},
	keywords = {agent-based modelling and simulation, model testing, verification and validation},
	pages = {183--201}
}

@inproceedings{nguyen_testing_2011,
	address = {Berlin, Heidelberg},
	series = {{AOSE}'10},
	title = {Testing in {Multi}-agent {Systems}},
	isbn = {978-3-642-19207-4},
	url = {http://dl.acm.org/citation.cfm?id=1965954.1965971},
	abstract = {Testing software agents and Multi-Agent Systems (MAS) needs suitable techniques to evaluate agent's autonomous behaviours as well as distribution, social and deliberative properties, which are particular to these systems. This paper reviews testing methods and techniques with respect to the MAS properties they are able to address. For this purpose, we provide a reference framework that provides a classification of MAS testing levels (such as unit, agent, integration, system, and acceptance) and of testing approaches along the development artefact they exploit (namely, design and code artefacts). Open issues in testing MAS are then discussed providing a basis for a research roadmap.},
	urldate = {2018-09-24},
	booktitle = {Proceedings of the 10th {International} {Conference} on {Agent}-oriented {Software} {Engineering}},
	publisher = {Springer-Verlag},
	author = {Nguyen, Cu D. and Perini, Anna and Bernon, Carole and Pavón, Juan and Thangarajah, John},
	year = {2011},
	pages = {180--190}
}

@phdthesis{mcmillan_symbolic_1993,
author = {McMillan, Kenneth Lauchlin},
title = {Symbolic Model Checking: An Approach to the State Explosion Problem},
year = {1992},
publisher = {Carnegie Mellon University},
address = {USA},
note = {UMI Order No. GAX92-24209}
}


@book{burnstein_practical_2010,
	edition = {1st},
	title = {Practical {Software} {Testing}: {A} {Process}-{Oriented} {Approach}},
	isbn = {978-1-4419-2885-6},
	shorttitle = {Practical {Software} {Testing}},
	abstract = {Based on the needs of the educational community, and the software professional, this book takes a unique approach to teaching software testing. It introduces testing concepts that are managerial, technical, and process oriented, using the Testing Maturity Model (TMM) as a guiding framework. The TMM levels and goals support a structured presentation of fundamental and advanced test-related concepts to the reader. In this context, the interrelationships between theoretical, technical, and managerial concepts become more apparent. In addition, relationships between the testing process, maturity goals, and such key players as managers, testers and client groups are introduced. Topics and features:- Process/engineering-oriented text- Promotes the growth and value of software testing as a profession- Introduces both technical and managerial aspects of testing in a clear and precise style- Uses the TMM framework to introduce testing concepts in a systemmatic, evolutionary way to faciliate understanding- Describes the role of testing tools and measurements, and how to integrate them into the testing process Graduate students and industry professionals will benefit from the book, which is designed for a graduate course in software testing, software quality assurance, or software validation and verification Moreover, the number of universities with graduate courses that cover this material will grow, given the evoluation in software development as an engineering discipline and the creation of degree programs in software engineering.},
	publisher = {Springer Publishing Company, Incorporated},
	author = {Burnstein, Ilene},
	year = {2010}
}

@book{epstein_growing_1996,
	address = {Washington, DC, USA},
	title = {Growing {Artificial} {Societies}: {Social} {Science} from the {Bottom} {Up}},
	isbn = {978-0-262-55025-3},
	shorttitle = {Growing {Artificial} {Societies}},
	publisher = {The Brookings Institution},
	author = {Epstein, Joshua M. and Axtell, Robert},
	year = {1996}
}

@article{siebers_introduction_2008,
	title = {Introduction to {Multi}-{Agent} {Simulation}},
	url = {http://arxiv.org/abs/0803.3905},
	abstract = {When designing systems that are complex, dynamic and stochastic in nature, simulation is generally recognised as one of the best design support technologies, and a valuable aid in the strategic and tactical decision making process. A simulation model consists of a set of rules that define how a system changes over time, given its current state. Unlike analytical models, a simulation model is not solved but is run and the changes of system states can be observed at any point in time. This provides an insight into system dynamics rather than just predicting the output of a system based on specific inputs. Simulation is not a decision making tool but a decision support tool, allowing better informed decisions to be made. Due to the complexity of the real world, a simulation model can only be an approximation of the target system. The essence of the art of simulation modelling is abstraction and simplification. Only those characteristics that are important for the study and analysis of the target system should be included in the simulation model.},
	urldate = {2017-05-09},
	journal = {arXiv:0803.3905 [cs]},
	author = {Siebers, Peer-Olaf and Aickelin, Uwe},
	month = mar,
	year = {2008},
	note = {arXiv: 0803.3905},
	keywords = {Computer Science - Multiagent Systems, Computer Science - Neural and Evolutionary Computing},
	file = {arXiv\:0803.3905 PDF:/home/jonathan/Zotero/storage/G9V5DQB5/Siebers and Aickelin - 2008 - Introduction to Multi-Agent Simulation.pdf:application/pdf;arXiv.org Snapshot:/home/jonathan/Zotero/storage/N3JA3GJA/0803.html:text/html}
}

@book{wooldridge_introduction_2009,
	edition = {2nd},
	title = {An {Introduction} to {MultiAgent} {Systems}},
	isbn = {978-0-470-51946-2},
	abstract = {The study of multi-agent systems (MAS) focuses on systems in which many intelligent agents interact with each other. These agents are considered to be autonomous entities such as software programs or robots. Their interactions can either be cooperative (for example as in an ant colony) or selfish (as in a free market economy). This book assumes only basic knowledge of algorithms and discrete maths, both of which are taught as standard in the first or second year of computer science degree programmes. A basic knowledge of artificial intelligence would useful to help understand some of the issues, but is not essential. The books main aims are: To introduce the student to the concept of agents and multi-agent systems, and the main applications for which they are appropriate To introduce the main issues surrounding the design of intelligent agents To introduce the main issues surrounding the design of a multi-agent society To introduce a number of typical applications for agent technology},
	publisher = {Wiley Publishing},
	author = {Wooldridge, Michael},
	year = {2009}
}

@incollection{axelrod_advancing_1997,
	title = {Advancing the {Art} of {Simulation} in the {Social} {Sciences}},
	url = {https://link.springer.com/chapter/10.1007/978-3-662-03366-1\_2},
	abstract = {Advancing the state of the art of simulation in the social sciences requires appreciating the unique value of simulation as a third way of doing science, in contrast to both induction and deduction. This essay offers advice for doing simulation research, focusing on the programming of a simulation model, analyzing the results and sharing the results with others. Replicating other people’s simulations gets special emphasis, with examples of the procedures and difficulties involved in the process of replication. Finally, suggestions are offered for building of a community of social scientists who do simulation.},
	language = {en},
	urldate = {2017-05-05},
	booktitle = {Simulating {Social} {Phenomena}},
	publisher = {Springer, Berlin, Heidelberg},
	author = {Axelrod, Robert},
	year = {1997},
	doi = {10.1007/978-3-662-03366-1\_2},
	pages = {21--40},
	file = {Snapshot:/home/jonathan/Zotero/storage/HRJFZEDQ/978-3-662-03366-1_2.html:text/html}
}

@techreport{axelrod_guide_2006,
	type = {Staff {General} {Research} {Papers} {Archive}},
	title = {A {Guide} for {Newcomers} to {Agent}-{Based} {Modeling} in the {Social} {Sciences}},
	url = {http://econpapers.repec.org/paper/isugenres/12515.htm},
	abstract = {This guide provides pointers to introductory readings, software, and other materials to help newcomers become acquainted with agent-based modeling in the social sciences. Related work can be accessed at: http://www2.econ.iastate.edu/tesfatsi/ace.htm},
	urldate = {2017-05-08},
	institution = {Iowa State University, Department of Economics},
	author = {Axelrod, Robert and Tesfatsion, Leigh},
	month = jan,
	year = {2006},
	keywords = {Agent-based modeling, social sciences},
	file = {RePEc Snapshot:/home/jonathan/Zotero/storage/GKPTG7ED/12515.html:text/html}
}

@article{macal_everything_2016,
	title = {Everything you need to know about agent-based modelling and simulation},
	volume = {10},
	issn = {1747-7778, 1747-7786},
	url = {https://link.springer.com/article/10.1057/jos.2016.7},
	doi = {10.1057/jos.2016.7},
	abstract = {This paper addresses the background and current state of the field of agent-based modelling and simulation (ABMS). It revisits the issue of ABMS represents as a new development, considering the extremes of being an overhyped fad, doomed to disappear, or a revolutionary development, shifting fundamental paradigms of how research is conducted. This paper identifies key ABMS resources, publications, and communities. It also proposes several complementary definitions for ABMS, based on practice, intended to establish a common vocabulary for understanding ABMS, which seems to be lacking. It concludes by suggesting research challenges for ABMS to advance and realize its potential in the coming years.},
	language = {en},
	number = {2},
	urldate = {2018-02-09},
	journal = {Journal of Simulation},
	author = {Macal, C. M.},
	month = may,
	year = {2016},
	pages = {144--156},
	file = {Snapshot:/home/jonathan/Zotero/storage/TI6F7ZIL/jos.2016.html:text/html}
}

@incollection{axelrod_chapter_2006,
	title = {Chapter 33 {Agent}-based {Modeling} as a {Bridge} {Between} {Disciplines}},
	volume = {2},
	url = {http://www.sciencedirect.com/science/article/pii/S1574002105020332},
	abstract = {Using the author's own experiences, this chapter shows how agent-based modeling (ABM) can address research questions common to many disciplines, facilitate interdisciplinary collaboration, provide a useful multidisciplinary tool when the math is intractable, and reveal unity across disciplines. While ABM can be a hard sell, convergence within the agent-based community can enhance the interdisciplinary value of the methodology.},
	urldate = {2017-05-04},
	booktitle = {Handbook of {Computational} {Economics}},
	publisher = {Elsevier},
	author = {Axelrod, Robert},
	editor = {Judd, L. Tesfatsion {and} K. L.},
	year = {2006},
	doi = {10.1016/S1574-0021(05)02033-2},
	keywords = {Agent-based models, evolutionary biology, interdisciplinary research, prisoner's dilemma},
	pages = {1565--1584},
	file = {ScienceDirect Full Text PDF:/home/jonathan/Zotero/storage/J9MT7SBQ/Axelrod - 2006 - Chapter 33 Agent-based Modeling as a Bridge Betwee.pdf:application/pdf;ScienceDirect Snapshot:/home/jonathan/Zotero/storage/99UWITWZ/S1574002105020332.html:text/html}
}

@techreport{axelrod_convergence_1995,
	type = {Working {Paper}},
	title = {The {Convergence} and {Stability} of {Cultures}: {Local} {Convergence} and {Global} {Polarization}},
	shorttitle = {The {Convergence} and {Stability} of {Cultures}},
	url = {http://econpapers.repec.org/paper/wopsafiwp/95-03-028.htm},
	urldate = {2017-05-05},
	institution = {Santa Fe Institute},
	author = {Axelrod, Robert},
	month = mar,
	year = {1995},
	file = {RePEc Snapshot:/home/jonathan/Zotero/storage/FDSQ22W8/95-03-028.html:text/html}
}

@inproceedings{ionescu_dependently-typed_2012,
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Dependently-{Typed} {Programming} in {Scientific} {Computing}},
	copyright = {©2013 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-642-41581-4 978-3-642-41582-1},
	url = {http://link.springer.com/chapter/10.1007/978-3-642-41582-1\_9},
	abstract = {Computer simulations are essential in virtually every scientific discipline, even more so in those such as economics or climate change where the ability to make laboratory experiments is limited. Therefore, it is important to ensure that the models are implemented correctly, that they can be re-implemented and that the results can be reproduced. Typically, though, the models are described by a mixture of prose and mathematics which is insufficient for these purposes. We argue that using dependent types allows us to gradually reduce the gap between the mathematical description and the implementation, and we give examples from economic modelling. We discuss the consequences that our incremental approach has on programming style and the requirements it imposes on the dependently-typed programming languages used.},
	language = {en},
	urldate = {2016-12-12},
	booktitle = {Implementation and {Application} of {Functional} {Languages}},
	publisher = {Springer Berlin Heidelberg},
	author = {Ionescu, Cezar and Jansson, Patrik},
	editor = {Hinze, Ralf},
	month = aug,
	year = {2012},
	doi = {10.1007/978-3-642-41582-1\_9},
	keywords = {Software Engineering, Logics and Meanings of Programs, Programming Techniques, Information Systems Applications (incl. Internet), Compilers, Interpreters, Programming Languages, Programming Languages, Compilers, Interpreters, Mathematical Logic and Formal Languages},
	pages = {140--156},
	annote = {DOI: 10.1007/978-3-642-41582-1\_9},
	file = {Snapshot:/home/jonathan/Zotero/storage/N66ADBRB/978-3-642-41582-1_9.html:text/html;Snapshot:/home/jonathan/Zotero/storage/X3NH7SQF/978-3-642-41582-1_9.html:text/html}
}

@mastersthesis{evensen_extensible_2010,
	address = {Göteborg},
	title = {An {Extensible} and {Scalable} {Agent}-{Based} {Simulation} of {Barter} {Economics}},
	url = {https://gupea.ub.gu.se/handle/2077/22063},
	abstract = {This thesis project studies a simulation of decentralised bilateral exchange economics, in which prices are private information and trading decisions are left to individual agents. We set to re-engineer the model devised by Herbert Gintis and take his Delphi version as the basis for providing a new, portable barter economics simulation tool in Java. By introducing some extension points for new agent and market behaviours, we provide simple means to implement variations on the original model. In particular, our system could be used to study the emergent properties of heterogeneous agent behaviours. Through the addition of some default visualisation models we provide means for an improved intuitive understanding of the interaction between individual agents. The multi-agent simulation library MASON is used as the underlying simulation platform. The results of running the software with various parameters are compared to the results from the original version to confirm the convergence of the two programs.Cover: Relative private price visualisation for bartering agents.},
	school = {Chalmers University of Technology},
	author = {Evensen, Pelle and Märdin, Mait},
	year = {2010}
}

@article{gintis_emergence_2006,
	title = {The {Emergence} of a {Price} {System} from {Decentralized} {Bilateral} {Exchange}},
	volume = {6},
	issn = {1534-5971},
	url = {https://www.degruyter.com/view/j/bejte.2006.6.1/bejte.2006.6.1.1302/bejte.2006.6.1.1302.xml},
	doi = {10.2202/1534-5971.1302},
	abstract = {This paper analyzes the dynamics of completely decentralized bilateral exchange. In such a framework, neither money nor prices as public information exist. Rather, prices represent an agent's barter strategy, and hence are private information. We call these private prices. Agents formulate trade offers and accept or reject offers from other traders, on the basis of their private prices. Private prices are updated by low-scoring agents periodically imitating the strategies of higher-scoring agents. We show that a system of quasi-public prices emerges in the medium run, and these quasi-public prices converge to stationary distributions that are approximately competitive equilibria of the underlying Walrasian model in the long run. We thus provide, for the first time, a general, decentralized disequilibrium adjustment mechanism that renders market equilibrium dynamically stable in a highly simplified production and exchange economy.},
	number = {1},
	urldate = {2016-09-30},
	journal = {Contributions in Theoretical Economics},
	author = {Gintis, Herbert},
	year = {2006},
	pages = {1--15}
}

@article{botta_functional_2011,
	title = {A functional framework for agent-based models of exchange},
	volume = {218},
	issn = {0096-3003},
	url = {http://www.sciencedirect.com/science/article/pii/S0096300311010915},
	doi = {10.1016/j.amc.2011.08.051},
	abstract = {We propose a functional framework for studying agent-based dynamical models of exchange. The framework consists of a notation and of a number of elementary definitions. We argue that – in comparison to narrative descriptions – the framework has a number of advantages: (1) it allows one to express precisely the relationships between the classical notion of general equilibrium and agent-based models of exchange; (2) it supports computational descriptions of models of exchange which can be unambiguously implemented; (3) it assists the numerical investigation of such models by providing a specific set of elementary notions and computational primitives. These can be used to deduce model properties and to setup “crucial” numerical experiments for validating model implementations. In a companion paper, we apply the framework to specify and study a model of exchange in which multiple equilibrium prices coexist and prices evolve according to a simple trading scheme and to a generic genetic rule.},
	number = {8},
	urldate = {2016-09-30},
	journal = {Applied Mathematics and Computation},
	author = {Botta, N. and Mandel, A. and Ionescu, C. and Hofmann, M. and Lincke, D. and Schupp, S. and Jaeger, C.},
	month = dec,
	year = {2011},
	keywords = {Agent-based methods, Barter economies, Functional specifications, General equilibrium, Price dynamics},
	pages = {4025--4040},
	file = {ScienceDirect Full Text PDF:/home/jonathan/Zotero/storage/XBR8T9WN/Botta et al. - 2011 - A functional framework for agent-based models of e.pdf:application/pdf;ScienceDirect Full Text PDF:/home/jonathan/Zotero/storage/DAB4AVMK/Botta et al. - 2011 - A functional framework for agent-based models of e.pdf:application/pdf;ScienceDirect Snapshot:/home/jonathan/Zotero/storage/K4DQT3U4/S0096300311010915.html:text/html;ScienceDirect Snapshot:/home/jonathan/Zotero/storage/G5IGQAKV/S0096300311010915.html:text/html}
}

@book{colell_microeconomic_1995,
	title = {Microeconomic {Theory}},
	abstract = {Individual decision making. Game theory. Market equilibrium and market failure. Welfare economics and incentives.},
	language = {en},
	publisher = {Oxford University Press},
	author = {Colell, Andreu Mas},
	year = {1995},
	note = {Google-Books-ID: dFS2AQAACAAJ}
}